// need to understand the class component concepts
class Task {
    id: number;
    description: string;
    isComplete: boolean;
// Constructors are special methods used in object-oriented programming (OOP) to initialize objects 
    constructor(id: number, description: string) {
    this.description = description
    this.id = id
    this.isComplete = false
    }
}



class TodoList {
// In TypeScript, the private keyword is used to define class properties and methods that cannot be accessed or modified outside of the class. This is a key aspect 
// of encapsulation, one of the core principles of object-oriented programming (OOP)

    private tasks: Task[] = [];
    private nextId: number = 1;

    addTask(description: string): void {
       this.tasks.push({message : description}) 
       this.nextId++;

    }

    listTasks(): void {
        //TODO
        console.log(this.tasks)
        
    }
}

// Example usage:
const todoList = new TodoList();
todoList.addTask("Write TypeScript code");
todoList.addTask("Review PRs");
todoList.addTask("I am the best developer in the world...");
todoList.listTasks();